stages:
  - test
  - release

unit-test-harvester:
  stage: test
  image: docker:cli
  tags: [shell]
  variables:
    GIT_STRATEGY: none
  before_script:
    - uname -a
    - cd harvest-and-collect
    - chmod +x run_unit_test.sh
    - ls -l
    - pwd
  script:
    - /bin/sh run_unit_test.sh
  coverage: /(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/

unit-test-api:
  stage: test
  image: docker:cli
  tags: [shell]
  variables:
    GIT_STRATEGY: none
  before_script:
    - uname -a
    - cd api-endpoint
    - chmod +x run_unit_test.sh
    - ls -l
    - pwd
  script:
    - /bin/sh run_unit_test.sh
  coverage: /(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/

lint-job_harvester:
  stage: test
  image: python:3.12-bookworm
  allow_failure: true
  tags: [docker]
  before_script:
    - uname -a
    - python3 --version ; pip3 --version
    - pip3 install -r requirements.txt
    - cd harvest-and-collect

  script:
    - pylint harvest_and_collect

lint-job-api:
  stage: test
  image: python:3.12-bookworm
  allow_failure: true
  tags: [docker]
  before_script:
    - uname -a
    - python3 --version ; pip3 --version
    - pip3 install -r requirements.txt
    - cd api-endpoint

  script:
    - pylint api_worker


release:
  image: node:latest
  tags: [docker]
  stage: release
  before_script:
    - npm install @semantic-release/git @semantic-release/gitlab
  script:
    - npx semantic-release
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
